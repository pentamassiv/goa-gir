// This file was generated by gir (https://github.com/gtk-rs/gir)
// from 
// from gir-files (git@github.com:gtk-rs/gir-files.git)
// DO NOT EDIT

use glib::{prelude::*};
use std::{fmt};

glib::wrapper! {
    #[doc(alias = "GoaPrinters")]
    pub struct Printers(Interface<ffi::GoaPrinters, ffi::GoaPrintersIface>);

    match fn {
        type_ => || ffi::goa_printers_get_type(),
    }
}

impl Printers {
        pub const NONE: Option<&'static Printers> = None;
    

    //#[doc(alias = "goa_printers_interface_info")]
    //pub fn interface_info() -> /*Ignored*/Option<gio::DBusInterfaceInfo> {
    //    unsafe { TODO: call ffi:goa_printers_interface_info() }
    //}

    //#[doc(alias = "goa_printers_override_properties")]
    //pub fn override_properties(klass: /*Ignored*/&mut glib::ObjectClass, property_id_begin: u32) -> u32 {
    //    unsafe { TODO: call ffi:goa_printers_override_properties() }
    //}
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::Printers>> Sealed for T {}
}

pub trait PrintersExt: IsA<Printers> + sealed::Sealed + 'static {}

impl<O: IsA<Printers>> PrintersExt for O {}

impl fmt::Display for Printers {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("Printers")
    }
}
